var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
define(["require", "exports", "./Value", "../Ion", "../Ion", "./FromJsConstructor"], function (require, exports, Value_1, ion, Ion_1, FromJsConstructor_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ion = __importStar(ion);
    const _fromJsConstructor = new FromJsConstructor_1.FromJsConstructorBuilder()
        .withClasses(Date, ion.Timestamp)
        .build();
    class Timestamp extends Value_1.Value(Date, Ion_1.IonTypes.TIMESTAMP, _fromJsConstructor) {
        constructor(dateOrTimestamp, annotations = []) {
            let date;
            let timestamp;
            if (dateOrTimestamp instanceof Date) {
                date = dateOrTimestamp;
                timestamp = Timestamp._timestampFromDate(date);
            }
            else {
                timestamp = dateOrTimestamp;
                date = timestamp.getDate();
            }
            super(date);
            this._date = date;
            this._timestamp = timestamp;
            this._setAnnotations(annotations);
        }
        static _timestampFromDate(date) {
            let milliseconds = (date.getUTCSeconds() * 1000) + date.getUTCMilliseconds();
            let fractionalSeconds = new Ion_1.Decimal(milliseconds, -3);
            return new ion.Timestamp(0, date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), fractionalSeconds);
        }
        timestampValue() {
            return this._timestamp;
        }
        dateValue() {
            return this._date;
        }
        writeTo(writer) {
            writer.setAnnotations(this.getAnnotations());
            writer.writeTimestamp(this.timestampValue());
        }
    }
    exports.Timestamp = Timestamp;
});
//# sourceMappingURL=Timestamp.js.map